<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	   xmlns:mvc="http://www.springframework.org/schema/mvc"	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"	   xsi:schemaLocation="http://www.springframework.org/schema/beans					http://www.springframework.org/schema/beans/spring-beans-4.2.xsd					http://www.springframework.org/schema/context 					http://www.springframework.org/schema/context/spring-context-4.2.xsd					http://www.springframework.org/schema/mvc 					http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">	<!-- 设置使用注解的类所在的jar包	<context:component-scan base-package="com.zichen.bootstrap.controller"/>-->	<context:component-scan base-package="com.zichen.bootstrap">		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />		<!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" /> -->	</context:component-scan>		<!-- 数据库配置文件 -->    <context:property-placeholder location="classpath:jdbc.properties" />		<!-- 配置数据源 -->    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"        init-method="init" destroy-method="close">        <!-- 设置JDBC驱动名称 -->		<property name="driverClassName" value="${jdbc.driver}" />		<!-- 设置JDBC连接URL -->		<property name="url" value="${jdbc.url}" />		<!-- 设置数据库用户名 -->		<property name="username" value="${jdbc.username}" />		<!-- 设置数据库密码 -->		<property name="password" value="${jdbc.password}" />		<!-- 设置连接池初始值 -->		<property name="initialSize" value="1" />		<!-- 设置连接池最小空闲值 -->		<property name="minIdle" value="1" />		<!-- 设置连接池最大值 -->		<property name="maxActive" value="20" />		<!-- 设置连接池最大空闲值 -->		<!--<property name="maxIdle" value="50" />--> 		<!-- 配置获取连接等待超时的时间 -->	    <property name="maxWait" value="60000" />	    	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  	    <property name="timeBetweenEvictionRunsMillis" value="60000" />	    	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->	    <property name="minEvictableIdleTimeMillis" value="300000" />	    	    <property name="validationQuery" value="SELECT 'x'" />	    <property name="testWhileIdle" value="true" />	    <property name="testOnBorrow" value="false" />	    <property name="testOnReturn" value="false" />	    	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->	    <!--<property name="poolPreparedStatements" value="true" />-->	    <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="50" />-->	    	    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->		<!--<property name="filters" value="stat" />-->		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->		<!--<property name="poolPreparedStatements" value="true" />-->		<!--<property name="maxPoolPreparedStatementPerConnectionSize" value="50" />-->		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计		<property name="filters" value="stat" />-->    </bean>    <!-- MySql 链接 -->    <!--<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource">        <property name="driverClass" value="com.mysql.jdbc.Driver" />        <property name="jdbcUrl" value="jdbc:mysql://127.0.0.1/test" />        <property name="username" value="root" />        <property name="password" value="root" />    </bean>-->	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">		<property name="dataSource" ref="dataSource" />		<!-- 自动扫描mapping.xml文件 -->		<property name="mapperLocations" value="classpath:com/zichen/bootstrap/mapper/xml/*Mapper.xml"></property>	</bean><bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">		<property name="dataSource">			<ref bean="dataSource" />		</property>	</bean>	<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>		<!-- 查 找 类 路 径 下 的 映 射 器 并 自 动 将 它 们 创 建 成 MapperFactoryBean-->	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>		<property name="basePackage" value="com.zichen.bootstrap.mapper" />	</bean>	<!--        4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源    -->	<!--<bean id="txManager"		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">		<property name="dataSource" ref="dataSource"></property>	</bean>	&lt;!&ndash; 5. 使用声明式事务         transaction-manager：引用上面定义的事务管理器     &ndash;&gt;	<tx:annotation-driven transaction-manager="txManager" />--></beans>